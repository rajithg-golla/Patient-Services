<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <description>Set the developer name to the RecordTypeName variable</description>
        <name>Set_Record_Type_Name</name>
        <label>Set Record Type Name</label>
        <locationX>649</locationX>
        <locationY>342</locationY>
        <assignmentItems>
            <assignToReference>RecordTypeName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RecType.DeveloperName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Record_Type_Developer_Name</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Copy the email field to the Value field</description>
        <name>Set_Value_to_Email</name>
        <label>Set Value to Email</label>
        <locationX>1090</locationX>
        <locationY>173</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PJN_Email__c</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Copy the Fax value to the value field</description>
        <name>Set_Value_to_Fax</name>
        <label>Set Value to Fax</label>
        <locationX>774</locationX>
        <locationY>269</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PJN_Fax__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Value_to_Stripped_Phone_Fax</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Format the address by combining fields and write to the Value field</description>
        <name>Set_Value_to_formatted_Address</name>
        <label>Set Value to formatted Address</label>
        <locationX>987</locationX>
        <locationY>62</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormatAddress</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Format the value as a phone number</description>
        <name>Set_Value_to_Formatted_Phone</name>
        <label>Set Value to Formatted Phone</label>
        <locationX>1103</locationX>
        <locationY>414</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormatValueForPhone</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>copy the phone value to the value field</description>
        <name>Set_Value_to_Phone</name>
        <label>Set Value to Phone</label>
        <locationX>968</locationX>
        <locationY>230</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.PJN_Phone__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Value_to_Stripped_Phone_Fax</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Strip the Value field down to just numbers.</description>
        <name>Set_Value_to_Stripped_Phone_Fax</name>
        <label>Set Value to Stripped Phone Fax</label>
        <locationX>967</locationX>
        <locationY>413</locationY>
        <assignmentItems>
            <assignToReference>$Record.PJN_Value__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StripDownPhoneFax</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Value_to_Formatted_Phone</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Determine if the record type id matches the record type id of the contact information record</description>
        <name>Found_Record_Type</name>
        <label>Found Record Type</label>
        <locationX>420</locationX>
        <locationY>356</locationY>
        <defaultConnector>
            <targetReference>Find_Record_Type_Name</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Matches_Record_Type_Id</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecType.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.RecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Record_Type_Name</targetReference>
            </connector>
            <label>Matches Record Type Id</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine which Record Type was matched</description>
        <name>Record_Type_Developer_Name</name>
        <label>Record Type Developer Name</label>
        <locationX>641</locationX>
        <locationY>117</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Address</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PJN_Address</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Value_to_formatted_Address</targetReference>
            </connector>
            <label>Address</label>
        </rules>
        <rules>
            <name>Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PJN_Email</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Value_to_Email</targetReference>
            </connector>
            <label>Email</label>
        </rules>
        <rules>
            <name>Phone</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PJN_Phone</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Value_to_Phone</targetReference>
            </connector>
            <label>Phone</label>
        </rules>
        <rules>
            <name>Fax</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PJN_Fax</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Value_to_Fax</targetReference>
            </connector>
            <label>Fax</label>
        </rules>
    </decisions>
    <description>Runs PJN logic before the save of any created or updated Contact Information record.</description>
    <formulas>
        <description>Pull address values from record and format correctly</description>
        <name>FormatAddress</name>
        <dataType>String</dataType>
        <expression>IF(!ISBLANK({!$Record.PJN_Address_Line_1__c}), {!$Record.PJN_Address_Line_1__c} + &apos;,&apos;, &apos;&apos;) +
IF(!ISBLANK({!$Record.PJN_Address_Line_2__c}), {!$Record.PJN_Address_Line_2__c} + &apos;,&apos;, &apos;&apos;) +
IF(!ISBLANK({!$Record.PJN_City__c}), {!$Record.PJN_City__c} + &apos;,&apos;, &apos;&apos;) +
IF(!ISBLANK(TEXT({!$Record.PJN_State__c})), TEXT({!$Record.PJN_State__c}) + &apos;,&apos;, &apos;&apos;) +
IF(!ISBLANK({!$Record.PJN_Postal_Code__c}), {!$Record.PJN_Postal_Code__c}, &apos;&apos;)</expression>
    </formulas>
    <formulas>
        <description>Update the phone value to use formatting</description>
        <name>FormatValueForPhone</name>
        <dataType>String</dataType>
        <expression>IF ( LEN({!$Record.PJN_Value__c}) = 11,

    &quot;(&quot; &amp; MID({!$Record.PJN_Value__c}, 2,3) &amp; &quot;) &quot; &amp;
    MID({!$Record.PJN_Value__c}, 5,3) &amp; &quot;-&quot; &amp;
    MID({!$Record.PJN_Value__c}, 8,4),

    &quot;(&quot; &amp; MID({!$Record.PJN_Value__c}, 1,3) &amp; &quot;) &quot; &amp;
    MID({!$Record.PJN_Value__c}, 4,3) &amp; &quot;-&quot; &amp;
    MID({!$Record.PJN_Value__c}, 7,4)
)</expression>
    </formulas>
    <formulas>
        <description>Remove all periods (.), hypens (-), pluses (+) from the phone</description>
        <name>StripDownPhoneFax</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE(
    SUBSTITUTE(
        SUBSTITUTE(
            SUBSTITUTE(
                SUBSTITUTE(
                    SUBSTITUTE( {!$Record.PJN_Value__c} , &quot;.&quot;, &quot;&quot;),
                    &quot;-&quot;,&quot;&quot;),
                &quot;+&quot;,&quot;&quot;),
            &quot;(&quot;,&quot;&quot;),
        &quot;)&quot;,&quot;&quot;),
    &quot; &quot;, &quot;&quot;
)</expression>
    </formulas>
    <interviewLabel>Contact Information - Before Create Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Contact Information - PJN Before Create Update</label>
    <loops>
        <description>Loop over every Record Type returned.</description>
        <name>Find_Record_Type_Name</name>
        <label>Find Record Type Name</label>
        <locationX>427</locationX>
        <locationY>115</locationY>
        <assignNextValueToReference>RecType</assignNextValueToReference>
        <collectionReference>Get_Contact_Info_Record_Types</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Found_Record_Type</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Record_Type_Developer_Name</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Query for all Contact Information Record Types. Need Id to match the contact information record&apos;s record type id and DeveloperName to determine branching logic</description>
        <name>Get_Contact_Info_Record_Types</name>
        <label>Get Contact Info Record Types</label>
        <locationX>249</locationX>
        <locationY>115</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Find_Record_Type_Name</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PJN_Contact_Information__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>DeveloperName</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>48</locationX>
        <locationY>315</locationY>
        <connector>
            <targetReference>Get_Contact_Info_Record_Types</targetReference>
        </connector>
        <object>PJN_Contact_Information__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>RecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used to store the DeveloperName of the matched record type</description>
        <name>RecordTypeName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Record Type loop variable</description>
        <name>RecType</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>RecordType</objectType>
    </variables>
</Flow>
